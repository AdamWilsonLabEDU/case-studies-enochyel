---
title: "Case Study 11"
author: "Enoch"
format: html
editor: visual
---

```{r}
install.packages("mapview")
install.packages("foreach")
install.packages("doParallel")
install.packages("tidycensus")
```

```{r}
library(tidyverse)
library(tidycensus)
library(spData)
library(sf)
library(mapview) # new package that makes easy leaflet maps
library(foreach)
library(doParallel)
# Register parallel backend registerDoParallel(4)
```

```{r}
library(tidycensus)
census_api_key("677c6e6ec5f3c8621d7b139013d29cb61cf4dcdd")
```

```{r}
#download block data
# Define the race variables
race_vars <- c(
  "Total Population" = "P1_001N",
  "White alone" = "P1_003N",
  "Black or African American alone" = "P1_004N",
  "American Indian and Alaska Native alone" = "P1_005N",
  "Asian alone" = "P1_006N",
  "Native Hawaiian and Other Pacific Islander alone" = "P1_007N",
  "Some Other Race alone" = "P1_008N",
  "Two or More Races" = "P1_009N"
)
```

```{r}
# Get census data
options(tigris_use_cache = TRUE)
erie <- get_decennial(geography = "block", variables = race_vars, year=2020,
                  state = "NY", county = "Erie County", geometry = TRUE,
                  sumfile = "pl", cache_table=T) 
```

```{r}
# Crop the county-level data 
erie_cropped <- st_crop(erie, xmin = -78.9, xmax = -78.85, ymin = 42.888, ymax = 42.92)
```

```{r}
#For each
erie_point <- foreach(race = unique(erie_cropped$variable), .combine = rbind) %dopar% {
  erie_cropped %>% filter(variable == race) %>%
    st_sample(size =. $value) %>%
    st_as_sf() %>%
    mutate(variable = race)
}
```

```{r}
library(mapview)
mapview(erie_point, zcol = "variable", cex = 3)
```
